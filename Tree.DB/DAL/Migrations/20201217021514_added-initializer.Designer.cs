// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tree.DB.DAL;

namespace Tree.DB.Migrations
{
    [DbContext(typeof(TreeContext))]
    [Migration("20201217021514_added-initializer")]
    partial class addedinitializer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tree.DB.Entities.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NodeParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NodeParentId");

                    b.ToTable("Nodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Node1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Node2",
                            NodeParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Node3",
                            NodeParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Node4",
                            NodeParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Node5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Node6",
                            NodeParentId = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Node7",
                            NodeParentId = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Node8",
                            NodeParentId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Node9",
                            NodeParentId = 8
                        },
                        new
                        {
                            Id = 10,
                            Name = "Node10",
                            NodeParentId = 6
                        });
                });

            modelBuilder.Entity("Tree.DB.Entities.Node", b =>
                {
                    b.HasOne("Tree.DB.Entities.Node", "NodeParent")
                        .WithMany("Nodes")
                        .HasForeignKey("NodeParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
