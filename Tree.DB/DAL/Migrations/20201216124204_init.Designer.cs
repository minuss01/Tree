// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tree.DB.DAL;

namespace Tree.DB.Migrations
{
    [DbContext(typeof(TreeContext))]
    [Migration("20201216124204_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tree.DB.Entities.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NodeParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NodeParentId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("Tree.DB.Entities.Node", b =>
                {
                    b.HasOne("Tree.DB.Entities.Node", "NodeParent")
                        .WithMany("Nodes")
                        .HasForeignKey("NodeParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
